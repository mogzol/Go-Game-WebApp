{% extends "views/base.html.njk" %}

{% block title %}{% if hotseat %}Hotseat{% elif ai %}AI{% else %}Lobby{% endif %} Game{% endblock %}

{% block content %}
	<div class="page-header">
		<h1>{% if hotseat %}Hotseat{% elif ai %}AI{% else %}Lobby{% endif %} Game</h1>
	</div>

	<div class="row">
		{# The status column is first even though it is on the right side so that it is on top on small screens #}
		<div class="col-md-5 col-md-push-7">
			<div class="panel panel-default">
				<div class="panel-heading">{% if hotseat %}Hotseat{% elif ai %}AI{% else %}Lobby{% endif %} Game</div>
				<div class="panel-body">
					<div class="row">
						<div class="player-black col-xs-6 game-left-player">
							<h4><span class="glyphicon glyphicon-user"></span> Black</h4>
							<span class="player-username">Loading...</span> <small class="player-you" style="display:none">(you)</small><br>
							Rating: <span class="player-rating">...</span>
						</div>
						<div class="player-white col-xs-6 text-right not-turn">
							<h4>White <span class="glyphicon glyphicon-user"></span></h4>
							<span class="player-username">Loading...</span> <small class="player-you" style="display:none">(you)</small><br>
							Rating: <span class="player-rating">...</span>
						</div>
					</div>
					<div class="row">
						<div class="col-xs-6 game-left-player">
							<div class="pass-container">
								<button id="black_pass" class="pass btn btn-sm btn-block btn-danger" style="visibility: hidden">Pass</button>
							</div>
						</div>
						<div class="col-xs-6">
							<div class="pass-container pull-right">
								<button id="white_pass" class="pass btn btn-sm btn-block btn-danger" style="visibility: hidden">Pass</button>
							</div>
						</div>
					</div>
					<hr>
					<strong><em>Messages:</em></strong>
					<div class="game-messages" id="messages"></div>
					<div class="input-group">
						<input id="message" class="form-control" type="text" placeholder="Enter Message">
						<span class="input-group-btn">
							<button id="send" class="btn btn-default">Send</button>
						</span>
					</div>
				</div>
			</div>
		</div>

		<div class="col-md-7 col-md-pull-5">
			<div class="board-container">
				<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 1000 1000" id="board"></svg>
			</div>
		</div>
	</div>

	<div id="game_over" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">Game Over</h4>
				</div>
				<div class="modal-body">
					<h3 id="game_over_header" class="text-center"></h3>
					<div class="row">
						<div class="player-black col-xs-6 game-left-player in-modal">
							<h4><span class="glyphicon glyphicon-user"></span> Black</h4>
							<span class="player-username">Loading...</span> <small class="player-you" style="display:none">(you)</small><br>
							Score: <span class="player-score"></span><br>
							Rating: <span class="player-rating">...</span>
						</div>
						<div class="player-white col-xs-6 text-right not-turn in-modal">
							<h4>White <span class="glyphicon glyphicon-user"></span></h4>
							<span class="player-username">Loading...</span> <small class="player-you" style="display:none">(you)</small><br>
							Score: <span class="player-score"></span><br>
							Rating: <span class="player-rating">...</span>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					{% if hotseat or ai %}
						<a href="{{ routes.quickGame }}" id="next" class="btn btn-success">Return to Quick Game select</a>
					{% else %}
						<a href="{{ routes.lobbies }}" id="next" class="btn btn-success">Return to Lobby select</a>
					{% endif %}
				</div>
			</div>
		</div>
	</div>
{% endblock %}

{% block javascript %}
	<script src="/js/boardDrawer.js"></script>
	<script>
		var $board, $messages, $message, $send, $pass, $x, $y, $black, $bUser, $bYou, $bRating, $bPass, $bScore,
				$white, $wUser, $wYou, $wRating, $wPass, $wScore, $overModal, $overHeader, $next;

		var hotseat = {{ hotseat|default(false) }};
		var currentTurn = 1;
		var playingAs = null;
		var playerBlack = '';
		var playerWhite = '';

		function loadBlack(player) {
			var name = player._player;
			if (name === '{{ username }}')
				playingAs = 1;

			playerBlack = name;

			$bUser.text(name);
			$bRating.text(player._gameSkillLevel);

			if (hotseat) {
				$bPass.css('visibility', 'visible');
			} else if (playingAs === 1) {
				$bYou.show();
				$bPass.css('visibility', 'visible');
			}
		}

		function loadWhite(player) {
			var name = player._player;
			if (name === '{{ username }}')
				playingAs = 2;

			playerWhite = name;

			$wUser.text(name);
			$wRating.text(player._gameSkillLevel);

			if (hotseat) {
				$wPass.css('visibility', 'visible');
			} else if (playingAs === 2) {
				$wYou.show();
				$wPass.css('visibility', 'visible');
			}
		}

		function addMessage(message) {
			var $message;
			if (message.by === null) {
				$message = $('<div>').append($('<em class="text-danger">').text(message.msg));
			} else {
				$message = $('<div>').append($('<strong>').text(message.by + ': ')).append($('<span>').text(message.msg));
			}

			$messages.append($message);
			$messages.scrollTop($messages.prop('scrollHeight')); // Scroll to bottom of list
		}

		function changeTurn(turn) {
			if (turn === 1) {
				currentTurn = turn;
				$black.removeClass('not-turn');
				$bPass.prop('disabled', false);
				$white.addClass('not-turn');
				$wPass.prop('disabled', true);
			} else if (turn === 2) {
				currentTurn = turn;
				$white.removeClass('not-turn');
				$wPass.prop('disabled', false);
				$black.addClass('not-turn');
				$bPass.prop('disabled', true);
			} else {
				// Game is over
				currentTurn = null;
				$black.addClass('not-turn');
				$bPass.prop('disabled', true);
				$white.addClass('not-turn');
				$wPass.prop('disabled', true);
				$message.prop('disabled', true);
				$send.prop('disabled', true);
			}
		}

		$(document).ready(function() {
			// Set up globals
			$board = $('#board');
			$messages = $('#messages');
			$message = $('#message');
			$send = $('#send');
			$pass = $('.pass');
			$x = $('#x');
			$y = $('#y');
			$black = $('.player-black');
			$bUser = $('.player-black .player-username');
			$bYou = $('.player-black .player-you');
			$bRating = $('.player-black .player-rating');
			$bScore = $('.player-black .player-score');
			$bPass = $('#black_pass');
			$white = $('.player-white');
			$wUser = $('.player-white .player-username');
			$wYou = $('.player-white .player-you');
			$wRating = $('.player-white .player-rating');
			$wScore = $('.player-white .player-score');
			$wPass = $('#white_pass');
			$overModal = $('#game_over');
			$overHeader = $('#game_over_header');
			$next = $('#next');

			{% if hotseat %}
				{% set route = routes.joinHotseatGame|replace(':id', gameId|urlencode) %}
			{% elif ai %}
				{% set route = routes.joinAiGame|replace(':id', gameId|urlencode) %}
			{% else %}
				{% set route = routes.joinGame|replace(':id', gameId|urlencode) %}
			{% endif %}

			var gameSocket = new WebSocket('{{ wsProtocol }}://' + window.location.host + '{{ route }}');

			gameSocket.onmessage = function (event) {
				var message = JSON.parse(event.data);

				if (message.message) {
					addMessage(message.message);
				}

				if (message.error) {
					addMessage({by: null, msg: message.error});
				}

				if (message.black) {
					loadBlack(message.black);
				}

				if (message.white) {
					loadWhite(message.white);
				}

				if (message.nextTurn !== undefined) { // nextTurn can be null
					changeTurn(message.nextTurn);

					if (!message.board) // If there is no board sent in this message, then just redraw the board
						boardDrawer.redraw($board, hotseat || currentTurn === playingAs ? currentTurn : null);
				}

				if (message.pass) {
					addMessage({by: null, msg: message.pass + ' has passed'})
				}

				if (message.board) {
					boardDrawer.drawBoard(message.board, $board, hotseat || currentTurn === playingAs ? currentTurn : null);
				}

				if (message.lobby) {
					$next.attr('href', '{{ routes.joinLobby|replace(':lobby', '') }}' + encodeURIComponent(message.lobby))
							.text('Proceed to next round');
				}

				if (message.done) {
					var black = message.done.black;
					var white = message.done.white;
					var winner = black._score > white._score ? black : white;

					if (hotseat) {
						$overHeader.text(winner._player + ' won the game!');
					} else if ((playingAs === winner._color)) {
						$overHeader.text('Congratulations, you won!');
					} else {
						$overHeader.text('Sorry, you lost. Better luck next time!');
					}

					$bScore.text(black._score);
					$wScore.text(white._score);

					var bSkill = black._gameSkillLevel;
					var bDifference = bSkill - parseInt($bRating.first().text());
					$bRating.text(bSkill + (bDifference > -1 ? ' (+' : ' (') + bDifference + ')');

					var wSkill = white._gameSkillLevel;
					var wDifference = wSkill - parseInt($wRating.first().text());
					$wRating.text(wSkill + (wDifference > -1 ? ' (+' : ' (') + wDifference + ')');

					$overModal.modal();
				}

				console.log(message);
			};

			gameSocket.onclose = function (event) {
				if (event.reason) {
					addMessage({by: null, msg: 'Connection closed by server: ' + event.reason});
				} else {
					addMessage({by: null, msg: 'Lost connection to server.'});
				}

				window.onbeforeunload = null;
			};

			// Handle token hover/click
			boardDrawer.registerEvents($board, function(x, y) {
				gameSocket.send(JSON.stringify({move: {x: parseInt(x), y: parseInt(y)}}));
			});

			$pass.on('click', function() {
				gameSocket.send(JSON.stringify({pass: true}));
			});

			// Handle sending messages
			$send.on('click', function() {
				gameSocket.send(JSON.stringify({message: $message.val()}));
				$message.val('');
			});

			// Send on enter
			$message.keyup(function(event){
				if (event.keyCode === 13){
					$send.click();
				}
			});

			// Warn user when navigating away that they will leave the lobby
			window.onbeforeunload = function() {
				// Newest chrome doesn't allow for custom string, but we'll leave it here for other browsers
				return "Navigating away from this page will remove you from the game. Are you sure you wish to continue?";
			};

			window.onunload = function() {
				gameSocket.close();
			};
		});
	</script>
{% endblock %}
